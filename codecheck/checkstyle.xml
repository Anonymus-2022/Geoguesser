<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
	"http://www.checkstyle.org/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration that checks the sun coding conventions from:
    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html
    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html
    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html
    - some best practices
  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).
  Most Checks are configurable, be sure to consult the documentation.
  To completely disable a check, just comment it out or delete it from the file.
  Finally, it is worth reading the documentation.
-->

<module name="Checker">
    <property name="severity" value="warning"/>

    <module name="SuppressWarningsFilter"/>
    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/checkstyle-suppressions.xml"/>
    </module>

    <property name="fileExtensions" value="java, properties, xml"/>

    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="RegexpMultiline">
        <property name="format" value="\r\n"/>
        <property name="message" value="Line ends with a windows line ending. Unix style must be used."/>
    </module>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="tabWidth" value="4"/>
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>

    <module name="TreeWalker">

        <module name="SuppressWarningsHolder"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="AbstractClassName"/>
        <module name="IllegalIdentifierName"/>

        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z]+$"/>
        </module>

        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9_]*)*$"/>
        </module>

        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z][a-zA-Z]*$"/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="^[A-Z][a-zA-Z]*$"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z][a-zA-Z]*$"/>
        </module>
        <module name="RecordTypeParameterName">
            <property name="format" value="^[A-Z][a-zA-Z]*$"/>
        </module>

        <module name="ConstantName">
            <property name="format" value="^[A-Z]+(_[A-Z]+)*$"/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z][a-zA-Z]*$"/>
        </module>
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z]+$"/>
        </module>
        <module name="LocalVariableName">
            <property name="allowOneCharVarInForLoop" value="true"/>
            <property name="format" value="^[a-z][a-zA-Z]+$"/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z]+$"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z]+$"/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z]+$"/>
        </module>
        <module name="PatternVariableName">
            <property name="format" value="^[a-z][a-zA-Z]+$"/>
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z]+$"/>
        </module>




        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_imports.html -->
        <module name="IllegalImport">
            <property name="illegalPkgs" value="sun,java.awt"/>
            <property name="severity" value="error"/>
        </module> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
        </module>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected|ignore"/>
            <property name="severity" value="error"/>
        </module>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="ArrayTrailingComma"/>
        <module name="EmptyStatement">
            <property name="severity" value="error"/>
        </module>
        <module name="EqualsHashCode">
            <property name="severity" value="error"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="PackageDeclaration">
            <property name="severity" value="error"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="FallThrough"/>
        <module name="StringLiteralEquality">
            <property name="severity" value="error"/>
        </module>
        <module name="NoClone">
            <property name="severity" value="error"/>
        </module>
        <module name="NoFinalizer">
            <property name="severity" value="error"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="OneStatementPerLine"/>
        <module name="MultipleStringLiterals">
            <property name="ignoreStringsRegexp" value='^(("")|("/")|("\."))$'/>
        </module>
        <module name="CovariantEquals">
            <property name="severity" value="error"/>
        </module>
        <module name="DefaultComesLast"/>
        <module name="DeclarationOrder"/>
        <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="AvoidInlineConditionals"/>


        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass">
            <property name="severity" value="error"/>
        </module>
        <module name="ThrowsCount"/>
        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true"/>
            <property name="protectedAllowed" value="true"/>
            <property name="allowPublicFinalFields" value="true"/>
            <property name="allowPublicImmutableFields" value="true"/>
        </module>


        <!-- Checks for annotations                              -->
        <!-- See http://checkstyle.sf.net/config_annotation.html -->
        <module name="AnnotationLocation"/>
        <module name="AnnotationUseStyle"/>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride">
            <property name="severity" value="error"/>
        </module>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarnings"/>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="UpperEll"/>
        <module name="TrailingComment"/>
        <module name="OuterTypeFilename">
            <property name="severity" value="error"/>
        </module>


        <!-- Javadoc checks.                                       -->
        <!-- http://checkstyle.sourceforge.net/config_javadoc.html -->
        <module name="MissingJavadocType">
            <property name="severity" value="info"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="severity" value="info"/>
            <property name="minLineCount" value="2"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
        </module>

        <module name="InvalidJavadocPosition">
            <property name="severity" value="info"/>
        </module>
        <module name="JavadocMissingWhitespaceAfterAsterisk">
            <property name="severity" value="info"/>
        </module>
        <module name="JavadocContentLocation">
            <property name="severity" value="info"/>
        </module>
        <module name="JavadocTagContinuationIndentation">
            <property name="severity" value="info"/>
        </module>

        <module name="JavadocStyle">
            <property name="severity" value="info"/>
            <property name="checkEmptyJavadoc" value="true"/>
        </module>
        <module name="JavadocType">
            <property name="severity" value="info"/>
            <property name="allowUnknownTags" value="true"/>
        </module>
        <module name="JavadocVariable">
            <property name="severity" value="info"/>
            <property name="scope" value="package"/>
        </module>
        <module name="JavadocMethod">
            <property name="severity" value="info"/>
            <property name="scope" value="protected"/>
            <property name="allowedAnnotations" value="Override, Test"/>
        </module>
    </module>
</module>
